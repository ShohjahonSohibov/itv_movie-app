// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/movies": {
            "get": {
                "description": "Get a list of all movies with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "List all movies",
                "parameters": [
                    {
                        "maxLength": 255,
                        "type": "string",
                        "name": "director",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "minimum": 0,
                        "type": "number",
                        "name": "min_imdb_rating",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "minimum": 0,
                        "type": "number",
                        "name": "min_itv_rating",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "minimum": 0,
                        "type": "number",
                        "name": "min_kinopoisk_rating",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maxLength": 255,
                        "type": "string",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "maximum": 2100,
                        "minimum": 1888,
                        "type": "integer",
                        "name": "year_from",
                        "in": "query"
                    },
                    {
                        "maximum": 2100,
                        "minimum": 1888,
                        "type": "integer",
                        "name": "year_to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/itv_movie_app_internal_models.MovieListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new movie with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Create a new movie",
                "parameters": [
                    {
                        "description": "Movie details",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/itv_movie_app_internal_models.CreateMovieRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/itv_movie_app_internal_models.CreateMovieRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/movies/{id}": {
            "get": {
                "description": "Get details of a specific movie by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Get a movie by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/itv_movie_app_internal_models.Movie"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing movie's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Update a movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Movie details to update",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/itv_movie_app_internal_models.UpdateMovieRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/itv_movie_app_internal_models.Movie"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload or ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a movie by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Delete a movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "itv_movie_app_internal_models.CreateMovieRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "budget": {
                    "type": "integer",
                    "minimum": 0
                },
                "director": {
                    "type": "string",
                    "maxLength": 255
                },
                "duration": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                },
                "imdb_rating": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "itv_rating": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "kinopoisk_rating": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "plot": {
                    "type": "string",
                    "maxLength": 5000
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "year": {
                    "type": "integer",
                    "maximum": 2100,
                    "minimum": 1888
                }
            }
        },
        "itv_movie_app_internal_models.Movie": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "budget": {
                    "type": "integer",
                    "minimum": 0
                },
                "created_at": {
                    "type": "string"
                },
                "director": {
                    "type": "string",
                    "maxLength": 255
                },
                "duration": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                },
                "id": {
                    "type": "string"
                },
                "imdb_rating": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "itv_rating": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "kinopoisk_rating": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "plot": {
                    "type": "string",
                    "maxLength": 5000
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "updated_at": {
                    "type": "string"
                },
                "year": {
                    "type": "integer",
                    "maximum": 2100,
                    "minimum": 1888
                }
            }
        },
        "itv_movie_app_internal_models.MovieListResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/itv_movie_app_internal_models.Movie"
                    }
                }
            }
        },
        "itv_movie_app_internal_models.UpdateMovieRequest": {
            "type": "object",
            "properties": {
                "budget": {
                    "type": "integer",
                    "minimum": 0
                },
                "director": {
                    "type": "string",
                    "maxLength": 255
                },
                "duration": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                },
                "imdb_rating": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "itv_rating": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "kinopoisk_rating": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "plot": {
                    "type": "string",
                    "maxLength": 5000
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "updated_at": {
                    "type": "string"
                },
                "year": {
                    "type": "integer",
                    "maximum": 2100,
                    "minimum": 1888
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Movie API",
	Description:      "A Movie management API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
